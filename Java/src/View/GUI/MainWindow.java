/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.GUI;

import View.View;
import java.util.ArrayList;
import Controller.Controller;

import deepspace.GameState;

import View.GUI.*;
import deepspace.CombatResult;
import javax.swing.JOptionPane;

public class MainWindow extends javax.swing.JFrame implements View {
    static Controller controller = Controller.getInstance();
    private String appName = "DeepSpace";
    
    private EnemyView enemyView;
    private SpaceStationView spaceStationView;
    
    private static MainWindow instance = null;
    public static MainWindow getInstance () {
        if (instance == null) {
            instance = new MainWindow();
        }
        return instance;
    }
    
    /**
     * Creates new form MainWindow
     */
    private MainWindow() {
        initComponents();
        
        enemyView = new EnemyView();
        panelEnemy.add(enemyView);
                
        spaceStationView = new SpaceStationView();
        panelSpaceStation.add(spaceStationView); 
        
        repaint();
        
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        addWindowListener(
            new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    Controller.getInstance().finish(0);
                }
            }
        );
    }
    
    @Override
    public void updateView() {
        GameState state = controller.getState();
        
        bCombatir.setEnabled(false);
        bSiguiente.setEnabled(true);
        if((state == GameState.BEFORECOMBAT) || (state == GameState.INIT)){
            bCombatir.setEnabled(true);
            bSiguiente.setEnabled(false);
        }
        
        enemyView.setEnemyView(controller.getUIversion().getCurrentEnemy());
        spaceStationView.setSpaceStationView(controller.getUIversion().getCurrentStation());
        
        //enemyView.setVisible(false);
        //if(state == GameState.AFTERCOMBAT || controller.isEnemyVisible())
            enemyView.setVisible(true);
        
        repaint();
    }
    
    @Override
    public void showView() {
        this.setVisible(true);
    }
    
    @Override
    public ArrayList<String> readNamePlayers() {
        NamesCapture namesCapt = new NamesCapture(this);
        return namesCapt.getNames();
    }
    
    @Override
    public void nextTurnNotAllowedMessage(){
        JOptionPane.showMessageDialog(this,"No puedes pasar turno.\n¡ Cumple tu castigo !", appName,JOptionPane.INFORMATION_MESSAGE);
    }
    
    @Override
    public void escapeMessage() {
        JOptionPane.showMessageDialog(this,"Has logrado escapar.\nEres una Gallina Espacial.",appName, JOptionPane.INFORMATION_MESSAGE);
    }

    @Override
    public void lostCombatMessage() {
        JOptionPane.showMessageDialog(this,"Has PERDIDO el combate.\nCumple tu castigo.",appName,JOptionPane.INFORMATION_MESSAGE);
    }
    
    @Override
    public void wonCombatMessage() {
        JOptionPane.showMessageDialog(this,"Has GANADO el combate. Disfruta de tu botín.",appName,JOptionPane.INFORMATION_MESSAGE);
    }

    @Override
    public void wonGameMessage() {
      JOptionPane.showMessageDialog(this,"¡¡ HAS GANADO LA PARTIDA !!",appName,JOptionPane.INFORMATION_MESSAGE);
    }

    @Override
    public void conversionMessage() {
        JOptionPane.showMessageDialog(this,"Has GANADO el combate y tu estación se ha transformado.",appName,JOptionPane.INFORMATION_MESSAGE);    
    }

    @Override
    public void noCombatMessage() {
        JOptionPane.showMessageDialog(this,"No puedes combatir en este momento.",appName,JOptionPane.INFORMATION_MESSAGE);    
    }
    
    @Override
    public boolean confirmExitMessage(){
        return (JOptionPane.showConfirmDialog(this, "¿Estás seguro/a que deseas salir?", appName, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION);
    }
    
    public String getAppName(){
        return appName;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelEnemy = new javax.swing.JPanel();
        panelSpaceStation = new javax.swing.JPanel();
        bCombatir = new javax.swing.JButton();
        bSiguiente = new javax.swing.JButton();
        bSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelEnemy.setBorder(javax.swing.BorderFactory.createTitledBorder("Enemy"));
        panelEnemy.setRequestFocusEnabled(false);

        panelSpaceStation.setBorder(javax.swing.BorderFactory.createTitledBorder("SpaceStation"));

        bCombatir.setText("COMBATIR");
        bCombatir.setToolTipText("");
        bCombatir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCombatirActionPerformed(evt);
            }
        });

        bSiguiente.setText("Siguiente Turno");
        bSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSiguienteActionPerformed(evt);
            }
        });

        bSalir.setText("Salir");
        bSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelSpaceStation, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelEnemy, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                    .addComponent(bCombatir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelEnemy, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(bCombatir, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(panelSpaceStation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalirActionPerformed
        // TODO add your handling code here:
        Controller.getInstance().finish(0);
    }//GEN-LAST:event_bSalirActionPerformed

    private void bCombatirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCombatirActionPerformed
        // TODO add your handling code here:
        controller.combat();
    }//GEN-LAST:event_bCombatirActionPerformed

    private void bSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSiguienteActionPerformed
        // TODO add your handling code here:
        controller.nextTurn();
    }//GEN-LAST:event_bSiguienteActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCombatir;
    private javax.swing.JButton bSalir;
    private javax.swing.JButton bSiguiente;
    private javax.swing.JPanel panelEnemy;
    private javax.swing.JPanel panelSpaceStation;
    // End of variables declaration//GEN-END:variables
}
