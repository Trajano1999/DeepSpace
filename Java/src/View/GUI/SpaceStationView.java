/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.GUI;

import java.util.ArrayList;
import java.awt.Component;
import deepspace.SpaceStationToUI;
import Controller.Controller;
import deepspace.GameState;
import deepspace.WeaponToUI;
import deepspace.ShieldToUI;

public class SpaceStationView extends javax.swing.JPanel {
    DamageView damageView;
    HangarView hangarView;
    
    /**
     * Creates new form SpaceStationView
     */
    public SpaceStationView() {
        initComponents();
        
        damageView = new DamageView();
        panelDamage.add(damageView);
        hangarView = new HangarView();
        panelHangar.add(hangarView);
        
        repaint();
        revalidate();
    }
    
    public void setSpaceStationView(SpaceStationToUI s){
        jLabelAmmoPower.setText(Float.toString(s.getAmmoPower()));
        jLabelFuelUnits.setText(Float.toString(s.getFuelUnits()));
        jLabelNMedals.setText(Integer.toString(s.getnMedals()));
        jLabelName.setText(s.getName());
        jLabelShieldPower.setText(Float.toString(s.getShieldPower()));
        
        String title;
        if (s.getHangar() != null )
            title = "Hangar con capacidad " + Integer.toString(s.getHangar().getMaxElements());
        else
            title = "Hangar con capacidad 0";            
        panelHangar.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0,0,0)),title));
        
        if(s.getHangar() == null)
            hangarView.setVisible(false);
        else{
            hangarView.setHangarView(s.getHangar());
            hangarView.setVisible(true);
        }    
        
        // Habilitar o deshabilitar botones seg√∫n el estado de la partida
        GameState state = MainWindow.controller.getState(); 
        if (state == GameState.BEFORECOMBAT || state == GameState.INIT) {
            jButtonDescartar.setEnabled(false);
            jButtonDescartarHangar.setEnabled(false);
            jButtonEquipar.setEnabled(true);
        } else {
            jButtonDescartarHangar.setEnabled(true);
            jButtonDescartar.setEnabled(true);
        }
        
        damageView.setDamageView(s.getPendingDamage());
        damageView.setVisible(true);
        
        jPanelWeapons.removeAll();
        jPanelShieldBooster.removeAll();
        ArrayList<WeaponToUI> w = s.getWeapons();
        ArrayList<ShieldToUI> sh = s.getShieldBoosters();
        
        WeaponView wv;
        ShieldBoosterView sv;
        
        for(WeaponToUI x : w){
            wv = new WeaponView();
            wv.setWeaponView(x);
            jPanelWeapons.add(wv);
        }
        
        for(ShieldToUI x : sh){
            sv = new ShieldBoosterView();
            sv.setShieldBoosterView(x);
            jPanelShieldBooster.add(sv);
        }
        
        repaint();
        revalidate();
    }
    
    ArrayList<Integer> getSelectedWeapons(){ // Armas seleccionadas montadas
        ArrayList<Integer> sw = new ArrayList();
        int i = 0;
        for(Component c : jPanelWeapons.getComponents()){
            if(((WeaponView)c).isSelected()){
                sw.add(i);
            }
            i++;
        }
        return sw;
    }
    
    ArrayList<Integer> getSelectedShieldBoosters(){ // escudos seleccionados montados
        ArrayList<Integer> ss = new ArrayList();
        int i = 0;
        for(Component c : jPanelShieldBooster.getComponents()){
            if(((ShieldBoosterView)c).isSelected()){
                ss.add(i);
            }
            i++;
        }
        return ss;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabelAmmoPower = new javax.swing.JLabel();
        jLabelShieldPower = new javax.swing.JLabel();
        jLabelFuelUnits = new javax.swing.JLabel();
        jLabelNMedals = new javax.swing.JLabel();
        jLabelName = new javax.swing.JLabel();
        panelDamage = new javax.swing.JPanel();
        panelHangar = new javax.swing.JPanel();
        jButtonEquipar = new javax.swing.JButton();
        jButtonDescartar = new javax.swing.JButton();
        jButtonDescartarHangar = new javax.swing.JButton();
        jScrollPaneWeapons = new javax.swing.JScrollPane();
        jPanelWeapons = new javax.swing.JPanel();
        jScrollPaneShieldBooster = new javax.swing.JScrollPane();
        jPanelShieldBooster = new javax.swing.JPanel();

        jLabel1.setBackground(new java.awt.Color(0, 204, 204));
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Estacion Espacial");

        jLabel2.setText("Potencia de Ataque:");

        jLabel3.setText("Potencia de Defensa");

        jLabel4.setText("Combustible:");

        jLabel5.setText("Medallas:");

        jLabelAmmoPower.setText("jLabel6");

        jLabelShieldPower.setText("jLabel7");

        jLabelFuelUnits.setText("jLabel8");

        jLabelNMedals.setText("jLabel9");

        jLabelName.setText("jLabel10");

        panelDamage.setBorder(javax.swing.BorderFactory.createTitledBorder("Castigo Pendiente"));

        panelHangar.setBorder(javax.swing.BorderFactory.createTitledBorder("Hangar"));

        jButtonEquipar.setText("Equipar");
        jButtonEquipar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEquiparActionPerformed(evt);
            }
        });

        jButtonDescartar.setText("Descartar");
        jButtonDescartar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDescartarActionPerformed(evt);
            }
        });

        jButtonDescartarHangar.setText("Descartar Hangar Completo");
        jButtonDescartarHangar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDescartarHangarActionPerformed(evt);
            }
        });

        jPanelWeapons.setBorder(javax.swing.BorderFactory.createTitledBorder("Potenciadores de Fuego"));
        jScrollPaneWeapons.setViewportView(jPanelWeapons);

        jPanelShieldBooster.setBorder(javax.swing.BorderFactory.createTitledBorder("Potenciadores de Defensa"));
        jScrollPaneShieldBooster.setViewportView(jPanelShieldBooster);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(panelHangar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPaneShieldBooster, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneWeapons, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelAmmoPower))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelName))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelShieldPower))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelFuelUnits))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelNMedals)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                        .addComponent(panelDamage, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonEquipar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDescartar)
                .addGap(18, 18, 18)
                .addComponent(jButtonDescartarHangar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabelName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabelAmmoPower))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabelShieldPower))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabelFuelUnits))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabelNMedals)))
                    .addComponent(panelDamage, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneWeapons, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneShieldBooster, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelHangar, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEquipar)
                    .addComponent(jButtonDescartar)
                    .addComponent(jButtonDescartarHangar)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEquiparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEquiparActionPerformed
        // TODO add your handling code here:
        Controller controller = Controller.getInstance();
        controller.mount(hangarView.getSelectedWeapons(), hangarView.getSelectedShieldBoosters());
    }//GEN-LAST:event_jButtonEquiparActionPerformed

    private void jButtonDescartarHangarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDescartarHangarActionPerformed
        // TODO add your handling code here:
        Controller controller = Controller.getInstance();
        controller.discardHangar();
    }//GEN-LAST:event_jButtonDescartarHangarActionPerformed

    private void jButtonDescartarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDescartarActionPerformed
        // TODO add your handling code here:
        Controller controller = Controller.getInstance();
        controller.discard(0x1, getSelectedWeapons(), getSelectedShieldBoosters());
        controller.discard(0x2, getSelectedWeapons(), getSelectedShieldBoosters());
        controller.updateView();
    }//GEN-LAST:event_jButtonDescartarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDescartar;
    private javax.swing.JButton jButtonDescartarHangar;
    private javax.swing.JButton jButtonEquipar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelAmmoPower;
    private javax.swing.JLabel jLabelFuelUnits;
    private javax.swing.JLabel jLabelNMedals;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelShieldPower;
    private javax.swing.JPanel jPanelShieldBooster;
    private javax.swing.JPanel jPanelWeapons;
    private javax.swing.JScrollPane jScrollPaneShieldBooster;
    private javax.swing.JScrollPane jScrollPaneWeapons;
    private javax.swing.JPanel panelDamage;
    private javax.swing.JPanel panelHangar;
    // End of variables declaration//GEN-END:variables
}
